---
title: "Sociol 232: Visualizing Social Data" 
author:
  - name: Kieran Healy
    email: kieran.healy@duke.edu
    affiliations: 
      - id: duke
        name: Duke University
format:
  html: default
  minion-pdf: default
---

```{r setup, message=FALSE, warning=FALSE, include=FALSE}
library(dplyr)
library(tibble)
library(pander)
```

:::: {.content-visible when-format="html"}
::: {.container .course-details .course-details-smaller}
::: {.row}
::: {.col-sm-6}

### Instructor
- {{< fa user >}} &nbsp; [{{< var instructor.name_no_title >}}]({{< var instructor.url >}})
- {{< fa university >}} &nbsp; {{< var instructor.office >}}
- {{< fa envelope >}} &nbsp; {{< var instructor.email >}}
- {{< fa brands mastodon >}} &nbsp; [{{< var instructor.mastodon >}}](https://mastodon.social/{{< var instructor.mastodon >}})
:::
::: {.col-sm-6}

### Dates and Location
- {{< fa calendar-alt >}} &nbsp; {{< var course.dates >}}
- {{< fa calendar >}} &nbsp; {{< var course.days >}}
- {{< fa clock >}} &nbsp; {{< var course.time >}}
- {{< fa map-marker >}} &nbsp; {{< var course.location >}}
:::
:::
:::
::::

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 3.5
#| fig-cap: U.S. Births, 1933-2015.

library(tidyverse)
library(demog)
library(patchwork)

p_boomline <- okboomer |> 
  filter(country == "United States") |> 
  ggplot(mapping = aes(x = date, 
                       y = births_pct_day)) + 
  geom_line() + 
  scale_x_date(limits = c(lubridate::ymd("1933-01-01"), 
                          lubridate::ymd("2015-12-01")), 
               expand = c(0,0)) + 
  labs(x = NULL, y = "Daily births/million") +
  theme_minimal() + 
  theme(axis.ticks.x = element_blank(), 
        axis.text.x = element_blank())

p_boomtile <- okboomer |>
    filter(country == "United States") |> 
    mutate(year_fct = 
             factor(year,  
                    levels = unique(year),
                    ordered = TRUE),
           month_fct = factor(month,
                              levels = rev(c(1:12)),
                              labels = rev(c("Jan", "Feb", "Mar", "Apr",
                                  "May", "Jun", "Jul", "Aug",
                                  "Sep", "Oct", "Nov", "Dec")),
                              ordered = TRUE)) |>
    select(year, month, year_fct, month_fct, everything()) |> 
    ggplot(aes(x = year_fct, y = month_fct)) +
    geom_tile(mapping = aes(fill = births_pct_day), 
              color = "white") + 
   scale_x_discrete(breaks = seq(1940, 2010, 5)) +    
   scale_fill_viridis_c(option = "B") + 
  labs(x = NULL, y = NULL, 
       fill = NULL) + 
  guides(fill = "none") + 
  coord_fixed() +
  theme(axis.text.y = element_text(size = rel(0.85)))

(p_boomline / p_boomtile) + plot_layout(heights = c(2, 3))

```


:::: {.content-visible when-format="pdf"}

- Instructor: [{{< var instructor.name_no_title >}}]({{< var instructor.url >}}), Sociology Department, {{< var instructor.office >}}.
- Time and Place: {{< var course.days >}} at {{< var course.time >}} in {{< var course.location >}} from {{< var course.dates >}}. 

::::



## About this course

This course will teach you how to use modern, widely-used tools to create insightful,
beautiful, reproducible visualizations of social science data. You will also
learn about the theory and practice of efforts to visualize social-scientific
data, and society more generally. We will think about different ways of looking
at data, about where social science data comes from in the first place, and
about the implications of choosing to represent it in different ways.

By the end of the course you will

- Understand the basic principles behind effective data visualization.
- Know how to create a wide range of plots in R using ggplot2.
- Know a fair amount about how to use R for things other than data visualization.
- Have a good understanding of issues surrounding the collection and representation of data in the social sciences and beyond.


## Core texts

I recommend (but do not require you buy) three books. Draft versions of all of
them are available for free online. 

- [@healy:2019] The print version can be purchased at [Amazon](https://amzn.to/2vfAixM) and other bookshops.

- [@wickham23:_r_data_scien] The print version can be purchased at [Amazon](https://www.amazon.com/Data-Science-Transform-Visualize-Model/dp/1492097403) and other bookshops.

- [@wilke:2019] The print version can be purchased at [Amazon](https://www.amazon.com/gp/product/1492031089) and other bookshops.

## Software

We will do all of our visualization work in this class using
[R](https://cran.r-project.org/) and use  [RStudio](https://www.rstudio.com/) to
manage our code and projects. [R](https://cran.r-project.org/) is a
freely-available programming language that is designed for statistical computing
and widely used across the natural and social sciences, as well as in the
rapidly-growing world of "data science" generally.
[RStudio](https://www.rstudio.com/) is an integrated development environment, or
IDE, for R, a kind of control center from which you can manage the engine-room
of R itself. It is also freely available.
If you haven't used these tools before, don't worry. The course does not
presuppose any familiarity with them. We will get up and running with them
during the first week.

## Schedule

The [weekly schedule](/schedule/) can be viewed on its [own page](/schedule/), which has more details on readings, examples, and problem sets.

```{r,echo=FALSE}
readxl::read_xlsx(here::here("data", "schedule-condensed.xlsx")) |> 
  dplyr::mutate(date = lubridate::ymd(date), 
                day2 = lubridate::ymd(day2),
                date = glue::glue('{format(date, "%b %e")} / {format(day2, "%b %e")}'), 
                date = stringr::str_replace_all(date, "NA", "-")) |> 
  dplyr::select(subgroup, date, title) |> 
  dplyr::rename(Week = subgroup, Date = date, Topic = title) |> 
  pander::pander()
```


## Course policies

- Attendance is required, and important. I am a reasonable person; if you need to be absent please _let me know in advance_ insofar as that is possible.
- Do the assigned readings in advance of class.
- Submit problem sets, or other assignments, on time.

## Required work and grading

Three kinds of work are required: problem sets and class participation, a
midterm project, and a final project.

- Weekly **Class Participation** and **Problem Sets** will let you reflect on the reading and practice your coding and visualization skills. Problem sets are due by end of day the _Monday_ after they are assigned.
- A **Midterm Project**.
- A **Final Project**. There is no final exam.

**Grade components**: Problem Sets and Class Participation: 50% / Midterm Project 20% / Final Project 30%.

## How you should approach this course

The material covered in the course has a lot of _continuity_ and it is
_cumulative_. You will be learning a set of practical skills. This means that
techniques we learn early on will be necessary for understanding things that
come later. It also means that regular practice will help you a lot. So, this is
not a "Topic of the week" course where you can tune out for a few weeks while
expecting to be able to easily drop back in later. The material we cover each
week will not be overwhelming. If you participate during class and keep up with
the weekly assignments you'll be in a very strong position to do well in the
class. If you don't, it'll be harder than you expected.

## Duke community standard

Like all classes at the university, this course is conducted under the Duke
Community Standard. Duke University is a community dedicated to scholarship,
leadership, and service and to the principles of honesty, fairness, respect, and
accountability. Citizens of this community commit to reflect upon and uphold
these principles in all academic and nonacademic endeavors, and to protect and
promote a culture of integrity. To uphold the Duke Community Standard you will
not lie, cheat, or steal in academic endeavors; you will conduct yourself
honorably in all your endeavors; and you will act if the Standard is
compromised.
